What happens when you initialize a repository? Why do you need to do it?

	Initializing a repository prepares Git to track changes to files in that location. It creates the hidden
	.git directory for storing metadata. 

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area allows you to separate out individual files to be prepared for a commit, distinct from the
	bulk of files in the working directory. This allows more granular control of your commits, instead of just
	snapshotting an entire directory that may contain files you're not actively working on or tracking. 

How can you use the staging area to make sure you have one commit per logical
change?

	By staging just the affected file after each logical change, then committing that. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
	
	Branches could be helpful to customizations, such a differnt language/regional
	versions, or for adding experimental features to the program. Branches would help 
	by allowing you to create these modifications without affecting the master branch. 

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?